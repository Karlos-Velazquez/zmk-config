/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
    macros {
        sft_y_base: sft_y_base {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&to 0>,
                <&macro_press>,
                <&kp RIGHT_SHIFT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp RIGHT_SHIFT>;

            label = "SFT_Y_BASE";
        };

        mom_base: mom_alt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&to 7>,
                <&macro_pause_for_release>,
                <&macro_tap>,
                <&to 0>;

            label = "MOM_ALT";
        };

        alt_tab: lalt_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LEFT_ALT>, <&macro_tap>, <&kp TAB>;

            label = "LALT_TAB";
        };

        sim_Lshift: sim_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&tog 6>,
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&tog 6>;

            label = "SIM_SHIFT";
        };

        sim_Rshift: sim_Rshift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&tog 6>,
                <&macro_press>,
                <&kp RIGHT_SHIFT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp RIGHT_SHIFT>,
                <&macro_tap>,
                <&tog 6>;

            label = "SIM_RSHIFT";
        };

        mom_mov: mom_mov {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&to 7>,
                <&macro_pause_for_release>,
                <&macro_tap>,
                <&to 1>;

            label = "MOM_MOV";
        };

        fun_base: fun_base {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&to 9>,
                <&macro_pause_for_release>,
                <&macro_tap>,
                <&to 0>;

            label = "FUN_BASE";
        };

        doble_tab_enter: doble_tab {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp TAB &kp TAB &kp ENTER>;
            label = "DOBLE_TAB";
        };

        ctrl_v_enter: ctrl_v_enter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(V) &kp ENTER>;
            label = "CTRL_V_ENTER";
        };

        vent_2_enter: vent_2_enter {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(NUMBER_2) &kp ENTER>;
            label = "VENT_2_ENTER";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Heliks041 {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | GRAVE  |   1    |   2    |   3    |   4    |   5    |                                      |   6    |   7    |   8    |   9    |   0    |  DEL   |
            // |  TAB   |   Q    |   W    |   E    |   R    |   T    |                                      |   Y    |   U    |   I    |   O    |   P    |  BSPC  |
            // |  CTRL  |   A    |   S    |   D    |   F    |   G    |                                      |   H    |   J    |   K    |   L    |   ;    |   '    |
            // |  SHIFT |   Z    |   X    |   C    |   V    |   B    |  LBKT  |                    |  RBKT  |   N    |   M    |   ,    |   .    |   /    |  RET   |
            // | ADJUST |  ESC   |  ALT   |  LGUI  | EISUU  | LOWER  | SPACE  |                    |  SPACE | RAISE  |  KANA  |  LEFT  |  DOWN  |  UP    |  RIGHT |

            bindings = <
&kp ESC         &kp N6        &kp N4      &kp N2     &kp N0  &kp N8                                       &kp N9     &kp N1  &kp N3     &kp N5  &kp N7         &kp DEL
&fun_base       &kp X         &kp B       &kp P      &kp H   &kp Y                                        &kp J      &sl 4   &kp R      &kp C   &kp M          &fun_base
&kp LEFT_SHIFT  &kp I         &kp A       &kp E      &kp O   &kp U                                        &kp D      &kp T   &kp S      &kp N   &kp L          &kp RIGHT_SHIFT
&sim_Lshift     &kp W         &kp PERIOD  &kp COMMA  &kp F   &kp K      &kp C_VOL_DN     &kp C_VOLUME_UP  &kp Z      &kp Q   &kp V      &kp G   &kp SEMICOLON  &sim_Rshift
&mo 10          &kp LEFT_ALT  &mo 8       &mom_base  &mo 6   &kp SPACE  &kp BACKSPACE    &kp ENTER        &kp SPACE  &mo 6   &mom_base  &mo 8   &kp TAB        &mo 10
            >;
        };

        Movimiento {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |      |      |      |      |      |      |                                  |      |      |      |      |      |      |
            // |  ~   |  !   |  @   |  #   |  $   |  %   |                                  |  ^   |  &   |  *   |  (   |  )   |      |
            // |      |      |      |      |      |      |                                  |      |  _   |  +   |  {   |  }   | PIPE |
            // |      |      |      |      |      |      |  (   |                    |  )   |      |      |      | HOME | END  |      |
            // |      |      |      |      |      |      |      |                    |      |      |      |      |      |      |      |

            bindings = <
&kp ESC      &kp N6        &kp N4        &kp N2        &kp N0         &kp N8                                          &kp N9              &kp N1     &kp N3           &kp N5     &kp N7   &kp DEL
&trans       &kp RC(HOME)  &kp RC(LEFT)  &kp UP_ARROW  &kp RC(RIGHT)  &kp RC(UP_ARROW)                                &kp RS(RCTRL)       &mo 4      &mo 5            &kp ESC    &none    &trans
&sft_y_base  &kp HOME      &kp LEFT      &kp DOWN      &kp RIGHT      &kp END                                         &kp RCTRL           &kp LC(C)  &kp RIGHT_SHIFT  &kp F2     &none    &sft_y_base
&trans       &kp LEFT_ALT  &kp RS(TAB)   &kp RC(DOWN)  &kp TAB        &kp RC(END)       &kp C_VOL_DN    &kp C_VOL_UP  &kp K_CONTEXT_MENU  &kp LC(X)  &kp LC(V)        &kp LG(V)  &kp TAB  &trans
&trans       &trans        &trans        &mom_mov      &trans         &trans            &trans          &trans        &trans              &trans     &mom_mov         &trans     &trans   &trans
            >;
        };

        Navegacion {
            bindings = <
&kp ESC  &kp N6        &kp N4            &kp N2         &kp N0             &kp N8                                          &kp N9              &kp N1     &kp N3           &kp N5     &kp N7   &kp DEL
&trans   &kp RC(HOME)  &kp PAGE_UP       &kp RS(TAB)    &kp PAGE_DOWN      &kp RC(UP_ARROW)                                &kp RS(RCTRL)       &mo 4      &mo 5            &kp ESC    &none    &trans
&trans   &kp HOME      &kp RS(RC(LEFT))  &kp TAB        &kp RC(TAB)        &kp END                                         &kp RCTRL           &kp LC(C)  &kp RIGHT_SHIFT  &kp F2     &none    &trans
&trans   &kp LEFT_ALT  &kp RC(PAGE_UP)   &kp PAGE_DOWN  &kp RC(PAGE_DOWN)  &kp RC(END)       &kp C_VOL_DN    &kp C_VOL_UP  &kp K_CONTEXT_MENU  &kp LC(X)  &kp LC(V)        &kp LG(V)  &kp TAB  &trans
&trans   &trans        &trans            &trans         &trans             &trans            &trans          &trans        &trans              &trans     &trans           &trans     &trans   &trans
            >;
        };

        Auxiliar {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |    `     |    !     |    @     |    #     |    $     |    %     |                                          |    ^     |    &     |    *     |    (     |    )     |  EP TOG  |
            // |  BT CLR  | BT SEL0  | BT SEL1  | BT SEL2  | BGT SEL3 | BT SEL4  |                                          | RGB EFF+ | RGB HUE+ | RGB SAT+ | RGB SPD+ | RGB BRI+ | RGB TOG  |
            // |  BT NXT  | OUT TOG  | OUT USB  | OUT BLE  |          |          |                                          | RGB EFF- | RGB HUE- | RGB SAT- | RGB SPD- | RGB BRI- |          |
            // |  BT PRV  |          |          |          |          |          |    {     |                    |    }     |          |          |          |          |          |          |
            // |          |          |          |          |          |          |          |                    |          |          |          |          |          |          |          |

            bindings = <
&kp ESC  &kp N7        &kp N5         &kp N3            &kp N1         &kp N8                             &kp N9     &kp N0         &kp N2            &kp N4         &kp N6   &kp DEL
&trans   &trans        &kp RC(LEFT)   &kp LS(TAB)       &kp RC(RIGHT)  &trans                             &trans     &kp ENTER      &doble_tab_enter  &kp ENTER      &trans   &trans
&trans   &kp HOME      &ctrl_v_enter  &doble_tab_enter  &vent_2_enter  &kp END                            &trans     &vent_2_enter  &doble_tab_enter  &ctrl_v_enter  &trans   &trans
&trans   &kp LEFT_ALT  &kp RS(TAB)    &kp RC(DOWN)      &kp TAB        &trans     &trans       &trans     &trans     &kp LC(X)      &kp LC(V)         &trans         &kp TAB  &trans
&trans   &trans        &trans         &trans            &trans         &kp ENTER  &kp ENTER    &kp ENTER  &kp ENTER  &trans         &trans            &trans         &trans   &trans
            >;
        };

        Acentos {
            bindings = <
&trans          &trans            &kp SLASH         &kp DOT           &kp SLASH         &trans                        &trans  &trans  &kp GRAVE   &kp RA(COMMA)  &trans  &trans
&trans          &trans            &kp CAPSLOCK      &kp CAPSLOCK      &kp CAPSLOCK      &trans                        &trans  &trans  &kp RSHIFT  &to 1          &to 2   &trans
&kp LEFT_SHIFT  &kp RA(NUMBER_1)  &kp RA(NUMBER_2)  &kp RA(NUMBER_3)  &kp RA(NUMBER_4)  &kp RA(N5)                    &trans  &trans  &trans      &trans         &trans  &kp RIGHT_SHIFT
&trans          &trans            &trans            &trans            &kp RA(NUMBER_6)  &trans      &trans    &trans  &trans  &trans  &trans      &trans         &trans  &trans
&trans          &trans            &trans            &trans            &trans            &trans      &trans    &trans  &trans  &trans  &trans      &trans         &trans  &trans
            >;
        };

        Tabulacion {
            bindings = <
&kp ESC  &kp N7  &kp N5              &kp N3              &kp N1               &kp N8                    &kp N9  &kp N0       &kp N2  &kp N4        &kp N6  &kp DEL
&trans   &trans  &trans              &kp LA(UP_ARROW)    &trans               &trans                    &trans  &kp LA(TAB)  &trans  &kp LEFT_ALT  &trans  &trans
&trans   &trans  &kp LA(LEFT_ARROW)  &kp TAB             &kp LA(RIGHT_ARROW)  &trans                    &trans  &trans       &trans  &trans        &trans  &trans
&trans   &trans  &trans              &kp LA(DOWN_ARROW)  &trans               &trans  &trans    &trans  &trans  &trans       &trans  &trans        &trans  &trans
&trans   &trans  &trans              &trans              &trans               &trans  &trans    &trans  &trans  &trans       &trans  &trans        &trans  &trans
            >;
        };

        Simbolos {
            bindings = <
&trans          &none      &kp RS(F3)      &none           &kp RC(N)      &none                            &none          &kp LA(F4)     &kp F5             &kp F2     &none              &trans
&trans          &kp RA(X)  &kp RA(B)       &kp PERIOD      &kp RA(H)      &kp RA(Y)                        &kp RA(J)      &kp RA(S)      &kp RA(R)          &kp RA(C)  &kp RA(M)          &trans
&kp LEFT_SHIFT  &kp RA(I)  &kp SLASH       &kp RA(SLASH)   &kp RA(O)      &kp RA(P)                        &kp RA(Z)      &kp RA(T)      &kp LS(NUMBER_2)   &kp RA(N)  &kp RA(SEMICOLON)  &kp RIGHT_SHIFT
&trans          &kp RA(Q)  &kp RA(PERIOD)  &kp RA(COMMA)   &kp RA(F)      &kp RA(U)      &trans    &trans  &kp RA(D)      &kp RA(W)      &kp RA(BACKSLASH)  &kp RA(G)  &kp RA(RS(K))      &trans
&trans          &trans     &trans          &kp LEFT_SHIFT  &kp RA(COMMA)  &kp RA(COMMA)  &trans    &trans  &kp RA(COMMA)  &kp RA(COMMA)  &kp RIGHT_SHIFT    &trans     &trans             &trans
            >;
        };

        Momentaneo {
            bindings = <
&kp ESC      &kp LG(N7)    &kp LG(N6)      &kp LG(N5)          &kp LG(N4)      &kp LG(N0)                                             &kp LG(N9)      &kp LG(N1)        &kp LG(N2)         &kp LG(N3)        &kp LG(N8)  &kp DEL
&kp LA(TAB)  &kp RC(HOME)  &kp RC(LEFT)    &kp UP_ARROW        &kp RC(RIGHT)   &kp RC(UP_ARROW)                                       &trans          &kp LG(NUMBER_4)  &kp LG(N5)         &kp LG(NUMBER_6)  &trans      &kp LA(TAB)
&trans       &kp HOME      &kp LEFT_ARROW  &kp DOWN_ARROW      &kp RIGHT       &kp END                                                &kp LG(N0)      &kp LG(NUMBER_1)  &kp LG(NUMBER_2)   &kp LG(NUMBER_3)  &none       &trans
&trans       &kp RC(TAB)   &kp RS(TAB)     &kp RC(DOWN_ARROW)  &kp TAB         &kp RC(END)        &trans               &trans         &trans          &kp LG(N7)        &kp LG(N8)         &kp LG(N9)        &trans      &trans
&trans       &trans        &kp LEFT_ALT    &kp RC(PAGE_UP)     &kp LEFT_SHIFT  &kp LC(BACKSPACE)  &kp LC(BACKSPACE)    &kp RC(ENTER)  &kp RC(DELETE)  &kp RIGHT_SHIFT   &kp LC(PAGE_DOWN)  &kp TAB           &trans      &trans
            >;
        };

        Control {
            bindings = <
&kp RC(ESC)  &kp RC(N6)        &kp RC(N4)  &kp RC(N2)      &kp RC(N0)    &kp RC(N8)                                         &kp LC(N9)     &kp LC(N1)    &kp LC(N3)       &kp LC(N5)  &kp LC(N7)         &kp LC(DEL)
&trans       &kp RC(I)         &kp RC(S)   &kp RC(N)       &kp RC(K)     &kp RC(Y)                                          &kp LC(J)      &kp LC(R)     &kp LC(Z)        &kp LG(V)   &kp LC(M)          &trans
&trans       &kp RC(A)         &kp RC(E)   &kp RC(C)       &kp RC(X)     &kp RC(U)                                          &kp LC(D)      &kp LC(L)     &kp LC(V)        &kp LC(T)   &kp LC(B)          &trans
&trans       &kp RC(DOT)       &kp RC(O)   &kp RC(W)       &kp RC(F)     &kp RC(Q)      &trans               &trans         &kp LC(P)      &kp LC(F)     &kp LC(G)        &kp LC(H)   &kp LC(SEMI)       &trans
&trans       &kp LEFT_CONTROL  &kp TAB     &kp LEFT_SHIFT  &kp LEFT_ALT  &kp RC(SPACE)  &kp RC(BACKSPACE)    &kp LC(ENTER)  &kp LC(SPACE)  &kp LEFT_ALT  &kp RIGHT_SHIFT  &kp TAB     &kp RIGHT_CONTROL  &trans
            >;
        };

        Alt_Funcion {
            bindings = <
&kp F11   &kp F7     &kp F5        &kp F3     &kp F1     &kp F9                       &kp F8     &kp F10    &kp F2     &kp F4        &kp F6     &kp F12
&kp CAPS  &kp LA(X)  &kp LA(B)     &kp LA(P)  &kp LA(H)  &kp LA(Y)                    &kp LA(J)  &kp LA(J)  &kp LA(R)  &kp LA(C)     &kp LA(M)  &kp CAPSLOCK
&trans    &kp LA(I)  &kp LA(A)     &kp LA(E)  &kp LA(O)  &kp LA(U)                    &kp LA(D)  &kp LA(T)  &kp LA(S)  &kp LA(N)     &kp LA(L)  &trans
&trans    &kp LA(W)  &kp LA(W)     &kp LA(Q)  &kp LA(F)  &kp LA(K)  &trans    &trans  &kp LA(Z)  &kp LA(Q)  &kp LA(V)  &kp LA(G)     &none      &trans
&trans    &trans     &kp LEFT_ALT  &trans     &trans     &trans     &trans    &trans  &trans     &trans     &trans     &kp LEFT_ALT  &trans     &trans
            >;
        };

        Ventanas {
            bindings = <
&trans        &kp LG(N7)  &kp LG(N6)          &kp LG(N5)          &kp LG(N4)     &kp LG(N0)                       &kp LG(N9)     &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp LG(N8)  &trans
&trans        &trans      &trans              &kp LG(UP_ARROW)    &trans         &trans                           &trans         &trans      &kp LG(L)   &trans      &trans      &trans
&trans        &trans      &kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(RIGHT)  &trans                           &trans         &trans      &kp LG(V)   &trans      &trans      &trans
&trans        &trans      &trans              &trans              &trans         &trans         &trans    &trans  &trans         &trans      &trans      &trans      &trans      &trans
&kp LEFT_GUI  &to 0       &trans              &trans              &trans         &kp LG(SPACE)  &trans    &trans  &kp LG(SPACE)  &trans      &trans      &trans      &to 3       &kp LEFT_GUI
            >;
        };
    };
};
